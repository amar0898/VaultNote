spring.application.name=VaultNote
spring.security.user.name=admin
spring.security.user.password=password
#spring.profiles.active=dev

# MySQL Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/vaultnote
spring.datasource.username=root
spring.datasource.password=amar@567
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JWT Token
spring.app.jwtSecret=mySecretKey123912738aopsgjnspkmndfsopkvajoirjg94gf2opfng2moknm
spring.app.jwtExpirationMs=172800000

# VaultNote Frontend application URL
frontend.url=http://localhost:3000


logging.level.org.springframework.web=DEBUG

# GMAIl email settings properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=amar.pinjore.0898@gmail.com
spring.mail.password=mtwqjfdppekhvpxf
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# GitHub oAuth2 Configuration
spring.security.oauth2.client.registration.github.client-id=Ov23ligZOxKkrCvgd4IN
spring.security.oauth2.client.registration.github.client-secret=b701575b9b6a599a6966602d661df81ef4abac62
spring.security.oauth2.client.registration.github.scope=read:user,user:email

# Google oAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=97950838689-tpsejag3b2hqsu183101u5o1na9h9ep6.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

# Multipart File Upload
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

#path to store users profile pictures
file.upload-dir=/uploads/profile_photos/

# To serve static files to frontend
spring.web.resources.static-locations=classpath:/static/,file:/uploads/

# Redis Cloud Integration
spring.data.redis.host=redis-16943.crce174.ca-central-1-1.ec2.redns.redis-cloud.com
spring.data.redis.password=SIBK9nh2Ox1ofEpwAe5lTpjmbj95BaK8
spring.data.redis.port=16943

# Required connection configs for Kafka producer, consumer, and admin
spring.kafka.bootstrap-servers=pkc-ld537.ca-central-1.aws.confluent.cloud:9092
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='IJAWRFF4URKVAMFN' password='J1O+7UExSppmc2KqTCDfPvLNQ1roNPzKNq1znNWaJYUczmPmVvPDzUuIMl4TQ3kO';
spring.kafka.properties.sasl.mechanism=PLAIN
# Required for correctness in Apache Kafka clients prior to 2.6
spring.kafka.properties.client.dns.lookup=use_all_dns_ips
# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms=45000
# Best practice for Kafka producer to prevent data loss
spring.kafka.producer.acks=all
spring.kafka.client-id==ccloud-java-client-4bc27b0a-3f04-4266-876f-3441802dd6bb
spring.kafka.consumer.group-id=audit-log-group
spring.jackson.serialization.write-dates-as-timestamps=false
